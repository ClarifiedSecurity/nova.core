- name: Check if user '{{ user.username }}' exists and retrieve details
  ansible.builtin.set_fact:
    existing_gitlab_user_details: "{{ playbook_wide_gitlab_users_list | selectattr('username', 'equalto', user.username) | list | first | default({}) }}"

- name: Determine if user '{{ user.username }}' already exists in GitLab
  ansible.builtin.set_fact:
    user_already_exists_in_gitlab: "{{ existing_gitlab_user_details.id is defined }}"

- name: "CREATE user: '{{ user.username }}' (if not found in GitLab)"
  ansible.builtin.uri:
    url: "{{ gitlab_url_api }}/users"
    method: POST
    body_format: json
    body:
      email: "{{ user.email }}"
      password: "{{ user.password if user.password is defined else omit }}"
      username: "{{ user.username }}"
      name: "{{ user.name }}"
      force_random_password: "{{ user.password is not defined }}"
      skip_confirmation: true
      skip_reconfirmation: true
      admin: "{{ user.admin }}"
    headers:
      PRIVATE-TOKEN: "{{ gitlab_root_personal_token }}"
    status_code: [200, 201]
  when: not user_already_exists_in_gitlab

- name: "MODIFY user: '{{ user.username }}' (if already exists in GitLab)"
  ansible.builtin.uri:
    url: "{{ gitlab_url_api }}/users/{{ existing_gitlab_user_details.id }}"
    method: PUT
    body_format: json
    body:
      email: "{{ user.email }}"
      password: "{{ user.password if (user.password is defined and user.update_password | default(false)) else omit }}"
      username: "{{ user.username }}"
      name: "{{ user.name }}"
      reset_password: false
      skip_confirmation: true
      skip_reconfirmation: true
      admin: "{{ user.admin }}"
    headers:
      PRIVATE-TOKEN: "{{ gitlab_root_personal_token }}"
    status_code: 200
  when: user_already_exists_in_gitlab
