---
- name: Configuring MGMT IP with pvesh...
  become: false
  delegate_to: localhost
  # DHCP is not supported or recommended for Proxmox management interface
  when: connection_mode not in ['ipv4_dhcp', 'ipv6_dhcp', 'ipv6_slaac']
  block:
    ########
    # Udev #
    ########

    # Using Udev to set persistent interface names based on MAC addresses since otherwise with multi-NIC the interface names are randomly out of order
    # Unfortunately Proxmox 8 will break when changing interface names so only do this for Trixie (Proxmox 9)
    - name: Reconfiguring interface names...
      when: not vcenter_vm_info.instance.advanced_settings['guestInfo.detailed.data'] is search("bookworm")
      block:
        - name: Templating udev rules...
          ansible.builtin.template:
            src: 70-persistent-net.rules
            dest: /tmp/{{ project_fullname | default('') }}_{{ inventory_hostname }}_70-persistent-net.rules
            mode: "0644"
            lstrip_blocks: true

        - name: Getting file info...
          ansible.builtin.stat:
            path: /tmp/{{ project_fullname | default('') }}_{{ inventory_hostname }}_70-persistent-net.rules
          register: file_size

        - name: Preparing file upload...
          ansible.builtin.uri:
            url: https://{{ vmware_defaults.hostname }}/api/vcenter/vm/{{ configure_networking_vsphere_vm_id }}/guest/filesystem?action=create
            method: POST
            headers:
              vmware-api-session-id: "{{ vcenter_session_api_key.json }}"
            body:
              credentials: "{{ rest_api_credentials }}"
              spec:
                attributes:
                  overwrite: true
                  size: "{{ file_size.stat.size }}"
                path: /etc/udev/rules.d/70-persistent-net.rules
            status_code: 201
            body_format: json
            validate_certs: "{{ validate_vmware_certs }}"
          register: file_upload_prep

        - name: Uploading file...
          ansible.builtin.uri:
            url: "{{ file_upload_prep.json }}"
            method: PUT
            headers:
              vmware-api-session-id: "{{ vcenter_session_api_key.json }}"
            src: /tmp/{{ project_fullname | default('') }}_{{ inventory_hostname }}_70-persistent-net.rules
            status_code: 200
            body_format: json
            validate_certs: "{{ validate_vmware_certs }}"

        - name: Updating initramfs...
          ansible.builtin.uri:
            url: https://{{ vmware_defaults.hostname }}/api/vcenter/vm/{{ configure_networking_vsphere_vm_id }}/guest/processes?action=create
            method: POST
            headers:
              vmware-api-session-id: "{{ vcenter_session_api_key.json }}"
            body:
              credentials: "{{ rest_api_credentials }}"
              spec:
                arguments: -c "update-initramfs -k all -u"
                path: /bin/bash
            status_code: 201
            body_format: json
            validate_certs: "{{ validate_vmware_certs }}"
          register: network_config_command

        - name: Including command run check task...
          ansible.builtin.include_tasks: command_run_check.yml

        - name: Shutting down {{ custom_vm_name | default(vm_name) }} VM...
          ansible.builtin.include_role:
            name: nova.core.powerstate
          vars:
            shutdown: true

        - name: Starting {{ custom_vm_name | default(vm_name) }} VM...
          ansible.builtin.include_role:
            name: nova.core.powerstate
          vars:
            poweron: true

        - name: Waiting for VMware tools to become available...
          community.vmware.vmware_guest_tools_wait:
            name: "{{ custom_vm_name | default(vm_name) }}"

    - name: Templating network configuration script...
      ansible.builtin.template:
        src: proxmox.sh
        dest: /tmp/{{ project_fullname | default('') }}_{{ inventory_hostname }}_configure_network.sh
        lstrip_blocks: true
        mode: "0644"

    - name: Getting file info...
      ansible.builtin.stat:
        path: /tmp/{{ project_fullname | default('') }}_{{ inventory_hostname }}_configure_network.sh
      register: file_size

    - name: Preparing file upload...
      ansible.builtin.uri:
        url: https://{{ vmware_defaults.hostname }}/api/vcenter/vm/{{ configure_networking_vsphere_vm_id }}/guest/filesystem?action=create
        method: POST
        headers:
          vmware-api-session-id: "{{ vcenter_session_api_key.json }}"
        body:
          credentials: "{{ rest_api_credentials }}"
          spec:
            attributes:
              overwrite: true
              size: "{{ file_size.stat.size }}"
            path: /tmp/configure_network.sh
        status_code: 201
        body_format: json
        validate_certs: "{{ validate_vmware_certs }}"
      register: file_upload_prep

    - name: Uploading file...
      ansible.builtin.uri:
        url: "{{ file_upload_prep.json }}"
        method: PUT
        headers:
          vmware-api-session-id: "{{ vcenter_session_api_key.json }}"
        src: /tmp/{{ project_fullname | default('') }}_{{ inventory_hostname }}_configure_network.sh
        status_code: 200
        body_format: json
        validate_certs: "{{ validate_vmware_certs }}"

    - name: Templating resolv.conf configuration script...
      ansible.builtin.template:
        src: resolv.conf
        dest: /tmp/{{ project_fullname | default('') }}_{{ inventory_hostname }}_resolv.conf
        lstrip_blocks: true
        mode: "0644"

    - name: Getting resolv.conf file info...
      ansible.builtin.stat:
        path: /tmp/{{ project_fullname | default('') }}_{{ inventory_hostname }}_resolv.conf
      register: resolv_file_size

    - name: Preparing resolv.conf upload...
      ansible.builtin.uri:
        url: https://{{ vmware_defaults.hostname }}/api/vcenter/vm/{{ configure_networking_vsphere_vm_id }}/guest/filesystem?action=create
        method: POST
        headers:
          vmware-api-session-id: "{{ vcenter_session_api_key.json }}"
        body:
          credentials: "{{ rest_api_credentials }}"
          spec:
            attributes:
              overwrite: true
              size: "{{ resolv_file_size.stat.size }}"
            path: /etc/resolv.conf
        status_code: 201
        body_format: json
        validate_certs: "{{ validate_vmware_certs }}"
      register: resolv_file_upload_prep

    - name: Uploading resolv.conf...
      ansible.builtin.uri:
        url: "{{ resolv_file_upload_prep.json }}"
        method: PUT
        headers:
          vmware-api-session-id: "{{ vcenter_session_api_key.json }}"
        src: /tmp/{{ project_fullname | default('') }}_{{ inventory_hostname }}_resolv.conf
        status_code: 200
        body_format: json
        validate_certs: "{{ validate_vmware_certs }}"

    - name: Configuring network...
      ansible.builtin.uri:
        url: https://{{ vmware_defaults.hostname }}/api/vcenter/vm/{{ configure_networking_vsphere_vm_id }}/guest/processes?action=create
        method: POST
        headers:
          vmware-api-session-id: "{{ vcenter_session_api_key.json }}"
        body:
          credentials: "{{ rest_api_credentials }}"
          spec:
            arguments: /tmp/configure_network.sh
            path: /bin/sh
        status_code: 201
        body_format: json
        validate_certs: "{{ validate_vmware_certs }}"
      register: network_config_command

    - name: Including command run check task...
      ansible.builtin.include_tasks: command_run_check.yml
