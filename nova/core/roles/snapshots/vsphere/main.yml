---
- name: Checking VM status and info
  delegate_to: localhost
  become: false
  block:
    - name: Looking up the {{ custom_vm_name | default(vm_name) }} VM...
      vmware.vmware.guest_info:
        guest_name: "{{ custom_vm_name | default(vm_name) }}"
      register: vcenter_vm_info

    - name: ERROR
      ansible.builtin.fail:
        msg: "{{ custom_vm_name | default(vm_name) }} VM not found!"
      when: vcenter_vm_info.guests == []

    - name: Waiting until VMTools are running on {{ custom_vm_name | default(vm_name) }}...
      vmware.vmware.guest_info:
        guest_name: "{{ custom_vm_name | default(vm_name) }}"
      register: vm_tools
      until: vm_tools.guests[0].guest_tools_status == "guestToolsRunning"
      retries: "{{ (snapshots_agent_info_timeout if snapshots_agent_info_timeout >= 5 else 5) / 5 }}"
      delay: 5
      when:
        - vcenter_vm_info.guests[0].hw_power_status != "poweredOff"
        - snapshot_mode != 'revert'

    - name: Getting info about {{ custom_vm_name | default(vm_name) }} snapshots...
      community.vmware.vmware_guest_snapshot_info:
        datacenter: "{{ datacenter }}"
        name: "{{ custom_vm_name | default(vm_name) }}"
        folder: "{{ folder }}"
      register: snapshot_info

- name: Including powerstate role...
  ansible.builtin.include_role:
    name: nova.core.powerstate
  vars:
    shutdown: true
  when:
    - snapshot_mode == 'clean-snap' or snapshot_mode == 're-snap' or snapshot_mode == 'snap'
    - not live_snap | bool
    - vcenter_vm_info.guests[0].hw_power_status != "poweredOff"

- name: Including snapshot task...
  ansible.builtin.include_tasks: snapshot.yml
  when: snapshot_mode == 'clean-snap' or snapshot_mode == 're-snap' or snapshot_mode == 'snap'

- name: Including revert task...
  ansible.builtin.include_tasks: revert.yml
  when: snapshot_mode == 'revert'

- name: Including snapshot rename task...
  ansible.builtin.include_tasks: rename.yml
  when: snapshot_mode == 'rename'

- name: Including snapshot remove task...
  ansible.builtin.include_tasks: remove.yml
  when: snapshot_mode == 'remove'
