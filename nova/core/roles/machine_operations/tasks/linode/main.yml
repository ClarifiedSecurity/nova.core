---
- name: Missing required variables...
  ansible.builtin.fail:
    msg: |
      Following variables are required to run this role:
      - linode_api_token
  when: linode_api_token == {}

- name: Checking if {{ custom_vm_name | default(vm_name) }} exists in Linode...
  linode.cloud.instance_list:
    api_token: "{{ linode_api_token }}"
    filters:
      - name: label
        values: "{{ custom_vm_name | default(vm_name) }}"
  delegate_to: localhost
  become: false
  register: linode_vm_list

- name: Setting fresh_deploy as fact...
  ansible.builtin.set_fact:
    fresh_deploy: true
  when: linode_vm_list.instances == [] or deploy_mode == "redeploy"

# This will be used when creating or rebuilding the instance
- name: Setting template_password as fact...
  ansible.builtin.set_fact:
    template_password: >-
      {%- if save_secrets_to_vault and admin_accounts | selectattr('username', 'equalto', admin_account)
        | map(attribute='save_password_to_vault') | first | default(true) -%}
      {{ lookup('community.hashi_vault.hashi_vault',
        vault_lookup_fragment + 'secret=' +
        (secrets_vault_engine_path | default(environment_name)) +
        '/data/' +
        (secrets_vault_secrets_path | default(project_fullname)) +
        ':' + inventory_hostname + '_' + admin_account) }}
      {%- else -%}
      {{ predefined_linode_vm_password | default(lookup('password', '/dev/null length=17 chars=ascii_lowercase,ascii_uppercase,hexdigits,digits')) }}
      {%- endif -%}
  when:
    - deploy_mode != "undeploy"
    - fresh_deploy or rebuild

- name: Including {{ custom_vm_name | default(vm_name) }} rebuild tasks...
  ansible.builtin.include_tasks: rebuild.yml
  when: rebuild

- name: Including {{ custom_vm_name | default(vm_name) }} removal tasks...
  ansible.builtin.include_tasks: remove.yml
  when: deploy_mode in ['undeploy', 'redeploy']

- name: Including {{ custom_vm_name | default(vm_name) }} creation tasks...
  ansible.builtin.include_tasks: create.yml
